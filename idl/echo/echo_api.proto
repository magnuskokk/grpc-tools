syntax = "proto3";

package app.echo.v1;

option go_package = "echov1";

import "google/api/annotations.proto";
import "gogo.proto";

// All options (More info https://github.com/gogo/protobuf/blob/master/extensions.md)
option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = true;
option (gogoproto.stringer_all) =  false;
option (gogoproto.populate_all) = true;

// Generate tests.
option (gogoproto.testgen_all) = true;

// Generate benchmarks.
option (gogoproto.benchgen_all) = true;

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;

// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;

// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;

// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;

// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;


// EchoAPI echoes requests.
service EchoAPI {
  // Echo same request.
  rpc Echo(EchoRequest) returns (EchoResponse) {
    option (google.api.http) = {
      get: "/foo"
    };
  }
}

message EchoRequest {
  string message = 1;
}

message EchoResponse {
  string message = 1;
}
