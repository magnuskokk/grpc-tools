options:
  user:
    usage: Username to use for base images.
    default:
      command: id -un
  uid:
    usage: User id to use for base images.
    default:
      command: id -u 
  gid:
    usage: User group id to use for base images.
    default:
      command: id -g

tasks:
  docker.down:
    usage: Stop all containers.
    run:
      - command: docker-compose -f docker-compose.dev.yml down --remove-orphans
      - command: docker-compose down --remove-orphans

  docker.destroy:
    usage: Stop services and do global prune.
    run:
      - task: docker.down
      - command: docker system prune --volumes -a

  env.destroy:
    usage: Destroy the dev environment.
    run:
      - task: docker.destroy
      - command: sudo rm -rf ./.direnv

  env.reset:
    usage: Reset and reinstall the dev environment.
    run:
      - task: env.destroy
      - command: sh setup.sh

  build.dev:
    usage: Build the docker containers for dev tools.
    description: Called by setup.sh.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml build
        --force-rm
        --parallel
        --build-arg USER=${user}
        --build-arg UID=${uid}
        --build-arg GID=${gid}

  install.dev:
    usage: Install development tools.
    description: Called by setup.sh.
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d gobase
      - command: docker-compose -f docker-compose.dev.yml exec gobase tusk install.proto.wkt
      - command: docker-compose -f docker-compose.dev.yml exec gobase tusk install.dev

  protolint:
    usage: Lint protobuf definitions using prototool.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm -u ${uid}:${gid} prototool
        prototool lint

  protoc:
    usage: Generate gRPC server, client, gateway, typescript and swagger for all services.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm -u ${uid}:${gid} prototool
        prototool generate

  app.generate.go:
    usage: Run all //go:generate directives.
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d gobase
      - command: docker-compose -f docker-compose.dev.yml exec gobase tusk generate

  app.test.go:
    usage: Run all go tests.
    description: |
      Test
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d gobase
      - command: docker-compose -f docker-compose.dev.yml exec gobase tusk test

  app.bench.go:
    usage: Run all go benchmarks.
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d gobase
      - command: docker-compose -f docker-compose.dev.yml exec gobase tusk bench

  clean:
    usage: Remove all generated files.
    run:
      - command: tusk -f ./app/tusk.yml clean
      - command: tusk -f ./frontend/tusk.yml clean
      - command: tusk -f ./swagger/tusk.yml clean
 
  serve.echo:
    usage: Start the echo service gRPC and HTTP server.
    run:
      command: docker-compose up echo-server

  serve.echo.local:
    usage: Start echo dev server in debug mode.
    run:
      command: tusk -f ./app/tusk.yml serve.echo

  serve.echo.swagger:
    usage: Start the swagger UI
    description: TODO not working yet
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run 
        -e SWAGGER_JSON=/docs/idl/echo/echov1/echo_api.swagger.json
        --rm
        --service-ports
        swaggerui
