options:
  user:
    usage: Username to use for base images.
    default:
      command: id -un
  group:
    usage: Group name to use for base images.
    default:
      command: id -gn
  uid:
    usage: User id to use for base images.
    default:
      command: id -u
  gid:
    usage: User group id to use for base images.
    default:
      command: id -g

tasks:
  docker.down:
    usage: Stop all containers. All docker.* commands include only services defined in docker-compose files.
    run:
      - command: docker-compose -f docker-compose.dev.yml down
      - command: docker-compose down

  docker.cleancontainers:
    usage: Stop and remove all containers, images and any anonymous volumes attached to containers.
    run:
      - command: docker-compose -f docker-compose.dev.yml rm --stop --force -v
      - command: docker-compose rm --stop --force -v

  docker.cleanimages:
    usage: Stop all containers and remove all images.
    run:
      - command: docker-compose -f docker-compose.dev.yml down --rmi all
      - command: docker-compose down --rmi all

  docker.cleanvolumes:
    usage: Stop and remove all volumes.
    run:
      - command: docker-compose -f docker-compose.dev.yml down -v
      - command: docker-compose down -v

  docker.cleanall:
    usage: Stop and remove everything related to services defined in docker-compose files.
    run:
      - task: docker.down
      - task: docker.cleancontainers
      - task: docker.cleanimages
      - task: docker.cleanvolumes

  env.build:
    usage: Build the docker containers for dev tools.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml build
        --force-rm
        --build-arg USER=${user}
        --build-arg GROUP=${group}
        --build-arg UID=${uid}
        --build-arg GID=${gid}
        golocal

  env.reset:
    usage: Reset and rebuild the dev environment.
    run:
      - task: docker.cleanall
      # sudo hack there is a docker issue in golocal
      - command: sudo rm -rf .direnv
      - command: sh install-tusk.sh
      - command: tusk env.build

  gen.install.tools:
    usage: Install tools and dependencies for dealing with protobuf linting and generation.
    description: Downloads a lot of packages.
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d golocal
      - command: docker-compose -f docker-compose.dev.yml exec golocal tusk install.tools
      - command: docker-compose -f docker-compose.dev.yml exec golocal tusk install.proto.wkt

  gen.protolint:
    usage: Lint protobuf definitions using prototool.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm -u ${uid}:${gid} prototool
        prototool lint

  gen.protoc:
    usage: Generate gRPC server, client, gateway, typescript and swagger for all services.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm -u ${uid}:${gid} prototool
        prototool generate

  gen.app.go:
    usage: Run all //go:generate directives in ./app.
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d golocal
      - command: docker-compose -f docker-compose.dev.yml exec golocal tusk generate

  gen.clean:
    usage: Remove all generated files.
    run:
      - command: tusk -f ./app/tusk.yml clean
      - command: tusk -f ./frontend/tusk.yml clean
      - command: tusk -f ./swagger/tusk.yml clean

  app.test:
    usage: Run all go tests in ./app.
    description: |
      Test
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d golocal
      - command: docker-compose -f docker-compose.dev.yml exec golocal tusk test

  app.bench:
    usage: Run all go benchmarks.
    run:
      - command: docker-compose -f docker-compose.dev.yml up -d golocal
      - command: docker-compose -f docker-compose.dev.yml exec golocal tusk bench

  stack.build:
    usage: Build stack.
    run:
      - command: >
          docker-compose -f docker-compose.dev.yml build
          --force-rm
          --build-arg USER=${user}
          --build-arg GROUP=${group}
          --build-arg UID=${uid}
          --build-arg GID=${gid}
          gobuild
      - command: >
          docker-compose build
          --force-rm
          --parallel
          --build-arg USER=${user}
          --build-arg GROUP=${group}
          --build-arg UID=${uid}
          --build-arg GID=${gid}
          echo-server
          raspi-server
          metrics-server

  stack.up:
    usage: Start the stack.
    run:
      - command: docker-compose up -d

  stack.down:
    usage: Stop the stack.
    run:
      - command: docker-compose down
