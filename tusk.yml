options:
  uid:
    usage: User ID for local images.
    default:
      command: id -u

  gid:
    usage: Group ID for local images.
    default: 65535

  user:
    usage: Username for local images.
    default:
      command: id -un

tasks:
  docker.down:
    usage: Stop all containers. All docker.* commands include only services defined in docker-compose.* files.
    run:
      - command: docker-compose -f docker-compose.dev.yml down
      - command: docker-compose down

  docker.clean.containers:
    usage: Stop and remove all containers, images and any anonymous volumes attached to containers.
    run:
      - command: docker-compose -f docker-compose.dev.yml rm --stop --force -v
      - command: docker-compose rm --stop --force -v

  docker.clean.images:
    usage: Stop all containers and remove all images.
    run:
      - command: docker-compose -f docker-compose.dev.yml down --rmi all
      - command: docker-compose down --rmi all

  docker.clean.volumes:
    usage: Stop all containers and remove all volumes.
    run:
      - command: docker-compose -f docker-compose.dev.yml down -v
      - command: docker-compose down -v

  docker.clean:
    usage: Stop and clean everything but keep system cache for fast rebuilds.
    run:
      - task: docker.down
      - task: docker.clean.containers
      - task: docker.clean.images
      - task: docker.clean.volumes

  docker.prune.system:
    usage: WARNING! Prunes the whole system.
    run:
      command: docker system prune --volumes -a

  env.clean:
    usage: Reset an existing functional environment and install tusk.
    description: Clean without using sudo, 0400 permission issues with go. See https://github.com/golang/go/issues/27455#issuecomment-417997868
    run:
      # Run outside of GOPATH
      - command: docker-compose -f docker-compose.dev.yml run --rm --workdir="/" golocal go clean -modcache
      - command: tusk docker.clean
      - command: rm -rf .direnv
      - command: sh install-tusk.sh

  env.clean.sudo:
    usage: Reset any environment in this directory.
    description: Does keep system cache for fast docker rebuilds.
    run:
      - command: tusk docker.clean
      - command: sudo rm -rf .direnv
      - command: sh install-tusk.sh

  env.build:
    usage: Build containers for dev tools.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml build
        --force-rm
        --build-arg USER=${user}
        --build-arg UID=${uid}
        --build-arg GID=${gid}
        golocal

  gen.install.tools:
    usage: Install tools and dependencies necessary for using protolint and protoc.
    description: Not necessary for building, only for development. All generated files are included in the repo.
    run:
      - command: >
          docker-compose -f docker-compose.dev.yml run --rm golocal
          tusk install.tools
      - command: >
          docker-compose -f docker-compose.dev.yml run --rm golocal
          tusk install.proto.wkt

  gen.protolint:
    usage: Lint all protobuf definitions using prototool.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm -u ${uid}:${gid} prototool
        prototool lint

  gen.protoc:
    usage: Generate gRPC server, client, gateway, typescript and swagger for all services.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm -u ${uid}:${gid} prototool
        prototool generate

  gen.app.dockerfiles:
    usage: Generate Dockerfiles for servers in ./app/cmd.
    run:
      command: sh ./app/cmd/generate-dockerfiles.sh

  gen.app:
    usage: Run all //go:generate directives in ./app.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm golocal
        tusk generate

  gen.clean:
    usage: Remove all generated files.
    run:
      - command: tusk -f ./app/tusk.yml clean
      - command: tusk -f ./frontend/tusk.yml clean
      - command: tusk -f ./swagger/tusk.yml clean

  app.test:
    usage: Run all go tests in ./app.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm golocal
        tusk test

  app.bench:
    usage: Run all go benchmarks in ./app.
    run:
      command: >
        docker-compose -f docker-compose.dev.yml run --rm golocal
        tusk bench

  stack.build:
    usage: Build the whole stack.
    run:
      - command: docker-compose -f docker-compose.dev.yml build gobuild
      - command: >
          docker-compose build
          --force-rm
          --parallel
          echo-grpc-server
          echo-gateway-server
          raspi-grpc-server
          raspi-gateway-server
          metrics-server

  stack.up:
    usage: Start the stack.
    run:
      - command: docker-compose up -d

  stack.down:
    usage: Stop the stack.
    run:
      - command: docker-compose down
