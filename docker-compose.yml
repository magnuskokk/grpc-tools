version: '3.7'

#volumes:
#  prometheus_data: {}
#  grafana_data: {}

networks:
#  front-tier:
  back-tier:

services:
  echo-grpc-server:
    image: grpc-tools/echo-grpc-server
    build: 
      context: ./app
      dockerfile: cmd/echo-grpc-server/Dockerfile
      target: echo-grpc-server
    environment:
      - GRPC_BIND_ADDR=:9000
    ports:
      - 9000:9000
    networks:
      - back-tier

  echo-gateway-server:
    image: grpc-tools/echo-gateway-server
    build: 
      context: ./app
      dockerfile: cmd/echo-gateway-server/Dockerfile
      target: echo-gateway-server
    environment:
      - HTTP_BIND_ADDR=:8000
      - GRPC_DIAL_ADDR=echo-grpc-server:9000
    ports:
      - 8000:8000
    networks:
      - back-tier

  raspi-grpc-server:
    image: grpc-tools/raspi-grpc-server
    build: 
      context: ./app
      dockerfile: cmd/raspi-grpc-server/Dockerfile
      target: raspi-grpc-server
    environment:
      - GRPC_BIND_ADDR=:9001
    ports:
      - 9001:9001
    networks:
      - back-tier

  raspi-gateway-server:
    image: grpc-tools/raspi-gateway-server
    build: 
      context: ./app
      dockerfile: cmd/raspi-gateway-server/Dockerfile
      target: raspi-gateway-server
    environment:
      - HTTP_BIND_ADDR=:8001
      - GRPC_DIAL_ADDR=raspi-grpc-server:9001
    ports:
      - 8001:8001
    networks:
      - back-tier

#  metrics-server:
#    image: grpc-tools/metrics-server
##    build:
#     context: ./app
#      dockerfile: cmd/metrics-server/Dockerfile
#      target: metrics-server
#    environment:
#      - HTTP_BIND_ADDR=":8002"
#    ports:
#      - 8002:8002
#    networks:
#      - back-tier

  echo-swagger:
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/docs/idl/echo/echov1/echo_api.swagger.json
    volumes:
      - ./swagger:/docs
    ports:
      - 8080:8080
    networks:
      - back-tier

  raspi-swagger:
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/docs/idl/raspi/raspiv1/raspi_api.swagger.json
    volumes:
      - ./swagger:/docs
    ports:
      - 8081:8080
    networks:
      - back-tier

 # exporter:
 #   image: prom/node-exporter
 #   ports:
 #     - 9100:9100

#  prom:
#    image: prom/prometheus
#    volumes:
#      - ./docker/etc/prometheus/:/etc/prometheus/
#      - prometheus_data:/prometheus/
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'
#    ports:
#      - 9090:9090
#    depends_on:
#      - exporter
#      - metrics-server
#    links:
#      - cadvisor:cadvisor
#      - alertmanager:alertmanager
#    depends_on:
##      - cadvisor
 #     - metrics-server
 #   networks:
 #     - back-tier
 #   restart: always

#  node-exporter:
#    image: prom/node-exporter
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command: 
#      - '--path.procfs=/host/proc' 
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
#    networks:
#      - back-tier
#    restart: always

 # alertmanager:
 #   image: prom/alertmanager
 #   ports:
 #     - 9093:9093
 #   volumes:
 #     - ./docker/etc/alertmanager/:/etc/alertmanager/
 #   networks:
 #     - back-tier
 #   restart: always
 #   command:
 #     - '--config.file=/etc/alertmanager/config.yml'
 #     - '--storage.path=/alertmanager'

#  cadvisor:
#    image: google/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    ports:
#      - 8082:8080
#    networks:
#      - back-tier
#    restart: always

#  grafana:
#    image: grafana/grafana
#    depends_on:
#      - prom
#    ports:
#      - 3000:3000
#    volumes:
#      - ./docker/etc/grafana/:/etc/grafana/
#      - grafana_data:/var/lib/grafana
#    env_file:
#      - ./docker/etc/grafana/config.monitoring
#    networks:
#      - back-tier
#     # - front-tier
#    restart: always
